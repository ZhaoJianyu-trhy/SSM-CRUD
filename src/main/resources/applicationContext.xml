<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!--    除了Controller不扫描，其他全部扫描-->
    <context:component-scan base-package="com.zjy">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--    spring的配置文件，主要配置和业务逻辑有关的-->
    <!--    数据源，事务控制-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="pooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--    配置和mybatis的整合-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <property name="dataSource" ref="pooledDataSource"/>
        <!--        指定mybatis全局配置位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--        指定mybatis的mapper文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--    配置扫描器，将mybatis接口的实现加入到IOC容器里-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--        扫描所有的dao接口,加入到IOC容器-->
        <property name="basePackage" value="com.zjy.crud.dao"/>
    </bean>

    <!--    配置一个可以执行批量的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>

    <!--    事务控制配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--        数据源-->
        <property name="dataSource" ref="pooledDataSource"/>
    </bean>
    <!--    开启基于注解的事务，使用xml配置形式的事务（必要，比较重要的都是使用配置）-->
    <aop:config>
        <!--        哪些要切入-->
        <aop:pointcut id="txPoint" expression="execution(* com.zjy.crud.service..*(..))"/>
        <!--        配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!--        配置事务增强，事务如何切入-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 所有方法都是事务方法 -->
            <tx:method name="*"/>
            <!--以get开始的所有方法,视为查询  -->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>




    <!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->
</beans>